// Generated by CoffeeScript 1.6.3
var LIVERELOAD_PORT, lrSnippet, mountFolder;

LIVERELOAD_PORT = 35729;

lrSnippet = require("connect-livereload")({
  port: LIVERELOAD_PORT
});

mountFolder = function(connect, dir) {
  return connect["static"](require("path").resolve(dir));
};

module.exports = function(grunt) {
  var cfg;
  require("time-grunt")(grunt);
  require("load-grunt-tasks")(grunt);
  cfg = {
    app: "app",
    dist: "dist",
    tmp: ".tmp"
  };
  grunt.initConfig({
    cfg: cfg,
    env: grunt.file.readJSON('.env.json'),
    watch: {
      styles: {
        files: ["<%= cfg.app %>/{,*/}*.css"],
        tasks: ["concat", "cssmin"]
      },
      js: {
        files: ["<%= cfg.app %>/{,*/}*.js"],
        tasks: ["copy:js"]
      },
      livereload: {
        options: {
          livereload: LIVERELOAD_PORT
        },
        files: ["<%= cfg.dist %>/*.html", "<%= cfg.dist %>/all-min.css", "<%= cfg.dist %>/{,*/}*.js", "<%= cfg.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}"]
      }
    },
    connect: {
      options: {
        port: 9000,
        hostname: "localhost"
      },
      livereload: {
        options: {
          middleware: function(connect) {
            return [lrSnippet, mountFolder(connect, cfg.dist), mountFolder(connect, cfg.app)];
          }
        }
      },
      dist: {
        options: {
          middleware: function(connect) {
            return [mountFolder(connect, cfg.dist)];
          }
        }
      }
    },
    open: {
      server: {
        path: "http://localhost:<%= connect.options.port %>"
      }
    },
    clean: {
      dist: {
        files: [
          {
            dot: true,
            src: "<%= cfg.dist %>/*"
          }
        ]
      },
      temp: "<%= cfg.tmp %>"
    },
    useminPrepare: {
      html: "<%= cfg.app %>/index.html",
      options: {
        dest: "<%= cfg.dist %>"
      }
    },
    usemin: {
      options: {
        dirs: ["<%= cfg.dist %>"]
      },
      html: ["<%= cfg.dist %>/{,*/}*.html"],
      css: ["<%= cfg.app %>/{,*/}*.css"]
    },
    copy: {
      html: {
        expand: true,
        dot: true,
        cwd: '<%= cfg.app %>',
        dest: '<%= cfg.dist %>',
        src: ["index.html", "*.{ico,png,txt}"]
      },
      js: {
        expand: true,
        dot: true,
        cwd: '<%= cfg.app %>',
        dest: '<%= cfg.dist %>',
        src: ["**/*.js"]
      }
    },
    replace: {
      options: {
        variables: {
          client_id: "<%= env.client_id %>"
        },
        prefix: '@@'
      },
      html: {
        files: [
          {
            expand: true,
            cwd: "<%= cfg.dist %>",
            src: "*.html",
            dest: "<%= cfg.dist %>"
          }
        ]
      }
    }
  });
  grunt.registerTask("server", function(target) {
    if (target === "dist") {
      return grunt.task.run(["build", "open", "connect:dist:keepalive"]);
    }
    return grunt.task.run(["connect:livereload", "open", "watch"]);
  });
  grunt.registerTask("build", ["clean:dist", "useminPrepare", "copy:html", "copy:js", "concat", "usemin", "replace"]);
  return grunt.registerTask("default", ["clean", "build", "server"]);
};
